---
title: "ggploTX"
subtitle: "ou: minha experiência na cidade de Austin por meio de dados e gráficos feitos em R"
date: "2024-03-24"
categories: 
# exemplo de categorias:
  - "Texas"
  - "R"
  - "Intercâmbio"
lang: pt
toc: true 
draft: true 
execute: 
  warning: false
  message: false
  freeze: true
---

Estive em Austin durante quatro meses em 2022. Entre setembro e dezembro, precisei lidar com #PerrenguesChiques (situações que te irritam mas vc tá no exterior, então tem um glamour nesse incômodo), como o calor texano e acompanhar as variações do dólar, mas conheci lugares, pessoas, novos hábitos maravilhosos e um pouco mais sobre mim.

Na tentativa de treinar minha fluência no tidyverse e conhecer outros pacotes do R, revisitei umas informações do meu período de intercâmbio. Eu estruturei muitos dados nessa época, aqueles que já rastreio automaticamente (como scrobbles do last.fm) ou os que tive que monitorar para prestação de contas (o câmbio, minhas notas fiscais).

Esse post é um relato "dataficado" da cidade mais esquisita do Texas.

## Setup inicial

```{r}
# #| message: false
# #| warning: false
# #Carregando os pacotes
# library(tidyverse) #para lidar com os dados (ggplot tá aí!)
# library(lubridate) #para lidar com as datas
# library(weathermetrics) #para converter a temperatura
# library(janitor) #clean_names
# library(ggthemes) #outros temas
# library(rnaturalearth)
# library(ggrepel)
# #library(rcityviews)
# library(bbplot)
# library(sf)
# library(rnaturalearthdata)
# library(ggrepel)  # Para evitar a sobreposição dos rótulos
# library(plotly)
# library(ggtext) # para suportar texto com HTML
# library(glue) # para criar strings
# 
# Sys.setlocale("LC_TIME", "pt_BR.UTF-8")
```

------------------------------------------------------------------------

## Minha primeira viagem de avião

Minha viagem até Austin foi a primeira que fiz de avião. Foram 15 horas entre voos e paradas. Só tinha ido no Aeroporto de Guarulhos uma vez, uma semana antes para reconhecer o lugar da minha partida.

O trajeto começou em Guarulhos, um pouco depois das 5h. Teve uma parada no Panamá, no aeroporto de Tocumen (onde eu esqueci meu passaporte no caixa de um duty free e fiquei maluca por meia hora até encontrá-lo de novo) e outra em Houston, já no Texas. Na entrada dos EUA tive 58 minutos pra passar na imigração e fazer a conexão. Eu achava que dava tempo de ir no banheiro e fazer um lanche, mas fui bem ingênua em achar que a imigração era rapidinha hehe. Corri muito com as minhas malas num aeroporto muito grande (no aeroporto internacional de Houston você precisa usar trens pra ir de um lugar pro outro).

![](images/aviao2-side.jpeg){fig-align="center"}

Quis criar um mapa para retratar esse itinerário. Fiquei muito impactada vendo o caminho que eu estava fazendo na telinha do avião.

Para fazer esse mapa eu pesquisei as coordenadas de cada aeroporto e criei o dataframe abaixo:

  
```{r}
#| message: false
#| warning: false
## Localização de aeroportos
# aeroportos <- data.frame(
#   nome = c("GRU", "PTY", "IAH", "AUS"),
#   lat = c(-23.435556, 9.071364, 29.990220, 30.197429),
#   lon = c(-46.473056, -79.383453, -95.341442, -97.666306),
#   chegada = c(NA, "2022-09-07 10:31", "2022-09-07 19:55", "2022-09-07 22:58"),
#   saida = c("2022-09-07 05:26", "2022-09-07 15:35", "2022-09-07 22:00", NA))
# 
# # Processamento de dados
# aeroportos <- aeroportos %>%
#   mutate(
#     chegada = ymd_hm(chegada),
#     saida = ymd_hm(saida)
#   ) %>%
#   mutate(duracao = as.numeric(difftime(chegada, saida, units = "hours")))
# 
# # Corrigindo a estrutura de dados para rotas
# rotas <- data.frame(
#   lat = c(rbind(aeroportos$lat[-nrow(aeroportos)], aeroportos$lat[-1])),
#   lon = c(rbind(aeroportos$lon[-nrow(aeroportos)], aeroportos$lon[-1]))
# )
```

Hora de fazer o mapa! Aqui usei o pacote `rnaturalearth` para obter as área dos continentes e o `ggplot2` para plotar

```{r}
# # Configuração das cores
# cor_agua <- "darkblue"
# cor_terra <- "darkgreen"
# cor_rota <- "#CC5500"
# 
# # Criar um sf object para as Américas
# americas <- ne_countries(continent = c("south america", "central america", "north america"), returnclass = "sf")
# 
# # Limites de visualização com alguma margem
# xlim <- range(aeroportos$lon, na.rm = TRUE) + c(-70, 70)
# ylim <- range(aeroportos$lat, na.rm = TRUE) + c(-50, 60)
# 
# # Desenhar o mapa
# ggplot() +
#   geom_sf(data = americas, fill = cor_terra, color = "black") +  # Base do mapa das Américas
#  # geom_sf(data = st_geometry(americas), fill = cor_agua) +  # Oceano
#   geom_point(data = aeroportos, aes(x = lon, y = lat), fill = "black", size = 1) +  # Pontos dos aeroportos
#   geom_text_repel(data = aeroportos, aes(x = lon, y = lat, label = nome), color = "white", size = 4, box.padding = unit(0.35, "lines")) +  # Nomes dos aeroportos com ggrepel
#   geom_line(data = rotas, aes(x = lon, y = lat), color = cor_rota, size = 0.5, linetype = "dotted") +  # Linhas entre os pontos
#   labs(title = 'Minha viagem até Austin', subtitle = "O trajeto de mais de 8 mil km que fiz de São Paulo até o Texas") +
#   coord_sf(xlim = xlim, ylim = ylim, expand = FALSE) +  # Ajustar a visualização
#   theme_void() +  # Estilo minimalista
#   theme(plot.background = element_rect(fill = cor_agua),  # Fundo do plot
#         plot.title = element_text(size = 12, face = "bold", color = "white"),  # Estilo do título
#         plot.subtitle = element_text(size = 10, color = "white"))  # Estilo do subtítulo

```

------------------------------------------------------------------------

## Tá calor até de noite

![](https://i.pinimg.com/736x/9e/f9/bf/9ef9bf2174d0c994e18a181cc0208313.jpg){fig-align="center"}

Cheguei em Austin no finalzinho do verão, mas ainda estava muito quente para os meus padrões (ainda não conhecia os efeitos dessas ondas de calor mais recentes no Brasil né). Quando eu comentava do calor, sempre tinha alguém pra falar "é que você não sentiu nos meses de julho e agosto". Quase um "lá em Curitiba" reverso.

Eu não gosto das altas temperaturas. Até canto *ai que delícia o verão, a gente mostra o ombrinho* etc mas minha ligação com o calor acaba aí. Eu tenho pressão baixa então a maior parte do tempo me preocupava em não passar mal (o que aconteceu algumas vezes no TX).

![Bonés, chapéus e óculos de sol viraram meus acessórios favoritos](images/sol.jpg){fig-align="center"}

Os dados eu peguei pra uma tarefa da disciplina *Reporting With Data*. Como a temperatura estava em Fahrenheit, primeiro tive que converter para Celsius (afinal, aqui é BR). Usei o pacote `weathermetrics` pra essa tarefa

```{r}
#| message: false
#| warning: false
# #Carregando os dados
# ## Temperatura
# temp <- read.csv2("data-raw/3180668.csv",sep=',') |> 
#   clean_names()
# # converte os dados de fahrenheit para celsius
# temp$tmin <- fahrenheit.to.celsius(temp$tmin)
# temp$tmax <- fahrenheit.to.celsius(temp$tmax)
# 
# # uma olhadinha nos dados
# temp  |>
#   glimpse()
```

Selecionei as colunas de interesse para mostrar a partir do dia que cheguei em Austin (7 de setembro) e criei um gráfico com `ggplot2`. Minha intenção foi mostrar a amplitude térmica nesse período

```{r}
#| message: false
#| warning: false

# # #selecionando as colunas de interesse e filtrando o período que eu vou analisar
# # temp_clean <- temp |> 
# #   select(date, tmax, tmin) |>  
# #   filter(date > "2022-08-31")
# # 
# # temp_clean$date <- as.Date(temp_clean$date, format = "%Y-%m-%d")
# 
# # Encontrar a data mínima e máxima para criar uma sequência de primeiros dias de cada mês.
# temp_range <- range(temp_clean$date, na.rm = TRUE)
# start_dates <- seq(from = floor_date(min(temp_range), "month"), 
#                    to = ceiling_date(max(temp_range), "month"),
#                    by = "1 month")
# 
# # Supondo que 'temp_clean' já está com 'date' no formato Date
# # Encontrar os dias com os valores desejados
# dia_com_menor_temperatura <- temp_clean %>% filter(tmin == min(tmin))
# dia_com_maior_temperatura <- temp_clean %>% filter(tmax == max(tmax))
# dia_com_maior_amplitude <- temp_clean %>% mutate(amplitude = tmax - tmin) %>% filter(amplitude == max(amplitude))
# library(ggtext)
# 
# 
# # Use o ggtext para o subtitle que requer HTML
# my_title <- glue(
#   "Registros diários de temperaturas <b><span style = 'color:blue;'>mínimas</span></b> e <b><span style = 'color:orange;'>máximas</span></b> em Austin durante meu intercâmbio"
# )
# 
# # Cria o gráfico
# figura <- ggplot(
#   temp_clean, aes(x = date)) + 
#   geom_segment(aes(x = date, xend = date, y = tmin, yend = tmax)) +
#   geom_point(aes(y = tmin), color = "blue", size = 1) +
#   geom_point(aes(y = tmax), color = "orange", size = 1) +
#   bbc_style() +
#   labs(title = "Põe o casaco, tira o casaco",
#        subtitle = my_title, 
#        x = "Dia", 
#        y = "Temperatura (°C)") +
#   scale_x_date(date_breaks = "1 month", date_labels = "%d %b") +
#   geom_vline(data = data.frame(date = seq(min(temp_clean$date), max(temp_clean$date), by = "1 month")),
#              aes(xintercept = date), linetype = "dashed", color = "gray") +
#   theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust = -1, size = 10))
# 
# # Adicionar anotações com setas
# p <- figura + 
#   theme_few() +
#   annotate(
#     "text", 
#     x = dia_com_menor_temperatura$date, 
#     y = min(temp_clean$tmin) - 5, 
#     label = "Menor temperatura aconteceu \nno outono: dia 13/11, 1°C", 
#     hjust = 0, 
#     vjust = 0, 
#     size = 3, 
#     color = "black") +
#   annotate(
#     "text", 
#     x = dia_com_maior_temperatura$date, 
#     y = max(temp_clean$tmax) + 5, 
#     label = "O dia mais quente: \n22/09, 37°C", 
#     hjust = 1, 
#     vjust = -0.75, 
#     size = 3, 
#     color = "black") +
#   annotate(
#     "text", 
#     x = dia_com_maior_amplitude$date, 
#     y = max(temp_clean$tmax) + 10, 
#     label = "No dia 20/10 encarei uma diferença de 20°C \nentre as temperaturas mínima e máxima!", 
#     hjust = 0.5, 
#     vjust = 1, 
#     size = 3, 
#     color = "black") +
#   geom_curve(
#     aes(
#       x = dia_com_menor_temperatura$date, 
#       y = min(temp_clean$tmin), 
#       xend = dia_com_menor_temperatura$date, 
#       yend = min(temp_clean$tmin) - 2),
#     arrow = arrow(length = unit(0.1, "cm")), color = "black") +
#   geom_curve(
#     aes(
#       x = dia_com_maior_temperatura$date, 
#       y = max(temp_clean$tmax), 
#       xend = dia_com_maior_temperatura$date, 
#       yend = max(temp_clean$tmax) + 8), 
#     arrow = arrow(length = unit(0.1, "cm")), color = "black") +
#   geom_curve(
#     aes(
#       x = dia_com_maior_amplitude$date, 
#       y = (max(temp_clean$tmax) + min(temp_clean$tmin)) / 2, 
#       xend = dia_com_maior_amplitude$date, 
#       yend = max(temp_clean$tmax) + 4), 
#     arrow = arrow(length = unit(0.1, "cm")), color = "black") +
#   theme(
#     axis.text.x = element_text(angle = 0, vjust = 0.5, size = 10),
#     axis.text.y = element_text(size = 10),
#     plot.title = element_text(size = 14, face = "bold"), # Diminui o tamanho do título
#     plot.subtitle = ggtext::element_markdown()) # Use o markdown para o subtítulo# Diminui o tamanho do subtítulo
# p
```


```{r}
# Dados de substituição
# substitute_data <- data.frame(
#   date = c("2022-09-01", "2022-09-02", "2022-09-03", "2022-09-04", "2022-09-05", "2022-09-06"),
#   tmin = c(10.3, 12.5, 15.5, 10, 11.3, 13.7),
#   tmax = c(26.9, 30.2, 23.7, 15.1, 19.3, 23.9)
# )
# 
# # Converter strings de data para tipo Date, se ainda não estiverem
# substitute_data$date <- as.Date(substitute_data$date, format = "%Y-%m-%d")
# 
# # Substituição dos valores de temperatura
# temp_clean <- temp_clean %>%
#   mutate(
#     tmin = ifelse(date %in% substitute_data$date, substitute_data$tmin[match(date, substitute_data$date)], tmin),
#     tmax = ifelse(date %in% substitute_data$date, substitute_data$tmax[match(date, substitute_data$date)], tmax)
#   )

```



## Recebendo em BRL, gastando em USD

Meu período nos EUA foi bancado, em grande parte, pela bolsa de intercâmbio que recebi da Agência USP de Inovação. Como eu iria para os EUA (um lugar um pouco caro, rs), minha bolsa era uma das maiores, R\$36 mil. Nunca vi tanto dinheiro kk me senti rica por algumas semanas, mas isso acabou quando a realidade do dólar valendo mais de cinco reais tirou a minha alegria e a esperança de voltar cheia de produtinhos do exterior.

::: callout-tip
Você pode ter uma ideia dos meus gastos no [relatório](https://internacional.sistemas.eca.usp.br/ecanos/outgoing) que fiz pra Comissão de Relações Internacionais da ECA-USP. Mas também pode me chamar pra papear! Ir para o exterior sem qualquer experiência ou proximidade com pessoas de fora me deixou bem perdida inicialmente. Vamos nos ajudar :)
:::

Depois de chorar ao perceber que o dinheiro da bolsa *não era tanto assim* para o básico e muito menos para gastos extras, fui atrás de uns trampos como freelancer para veículos brasileiros. Ajudou muito! Mas ainda recebia em real e gastava em dólar. Isso me fez adquirir o hábito de acompanhar as variações do câmbio no noticiário e em aplicativos.

Depois desse contexto todo, apresento um gráfico que mostra dados históricos da taxa de câmbio entre o dólar americano (USD) e o real brasileiro (BRL). Normalmente, esses dados incluem informações como data, e valores de abertura, fechamento, máximo, mínimo e variação para cada período considerado (geralmente diário). Neste gráfico, foquei só no valor de fechamento do dólar.

```{r}
#| message: false
#| warning: false
#Carregando os dados
## Câmbio
# moeda <- read_csv("data-raw/USD_BRL Historical Data.csv") |> 
#   clean_names()
# moeda$date <- mdy(moeda$date)
# 
# 
# # Identificar o maior e menor valor de preço
# moeda <- moeda %>%
#   mutate(is_extreme = price == max(price) | price == min(price),
#          label = case_when(
#            price == max(price) ~ paste("Maior valor no período = R$", round(price, 2)),
#            price == min(price) ~ paste("Menor valor no período = R$", round(price, 2)),
#            TRUE ~ NA_character_
#          ))
# 
# figura <- moeda %>%
#   ggplot(aes(x = date)) +
#   geom_line(aes(y = price), color = "red") +  # Linha para os valores de fechamento
#   geom_point(aes(y = price), color = "blue", size = 1) +  # Pontos para os valores de fechamento
#   geom_text_repel(data = filter(moeda, is_extreme), aes(y = price, label = label), box.padding = 0.5, point.padding = 0.5, color = "black", size=3) +  # Rótulos para os valores extremos
#   labs(title = "Valores de fechamento do dólar", subtitle = "Preço em reais durante o período do meu intercâmbio", y = "Preço, em reais") +
#   theme_minimal() +
#  # scale_x_date(date_breaks = "1 month", date_labels = "%b") +
#   theme(axis.title.x = element_blank(),  # Remove o título do eixo y
#         axis.title.y = element_text(size = 15, angle = 90),
#         plot.title = element_text(size = 20, face = "bold"))
# ggplotly(figura)


```

## ... gastando em USD

Cerca de xx% dos meus gastos no Texas foram em três franquias de mercados: o H-E-B (mercado bem texano), o Target (o OXXO deles) e o Fiesta (o lugar com comidas mais *estrangeiras*, onde eu podia encontrar Guaraná Antarctica e leite Moça).

Na minha prestação de contas para a USP, fiz uma planilha com todos os meus gastos. Abaixo, separei uma parte dela, contendo os gastos de alimentação:

```{r}
#| message: false
#| warning: false

# mercado <- read_csv("data-raw/mercado.csv", 
#     col_types = cols(Valor = col_double()), 
#     locale = locale(decimal_mark = ",")) |>
#   clean_names() |> 
#   glimpse()
# 
# 
# # Converter a coluna 'Data' para o tipo data e a coluna 'Valor' para numérico
# mercado$data <- as.Date(mercado$data, "%d/%m/%Y")
# mercado$valor <- as.numeric(gsub(",", ".", mercado$valor))
# 
# # Agrupar os dados por mês e ano e calcular a média de gastos em dólares
# dados_agrupados <- mercado %>%
#   mutate(mes = format(data, "%m/%Y")) %>%
#   group_by(mes, mercado) %>%
#   summarise(media_gastos = sum(valor, na.rm = TRUE))
# 
# # Criar um gráfico de barras mostrando a média de gastos em dólares por mês
# ggplot(dados_agrupados, aes(x = mes, y = media_gastos, fill = mercado)) +
#   geom_bar(stat = "identity") +
#   labs(title = "Gastos com mercado por mês", subtitle = "Dólares que deixei nos mercados HEB, Fiesta e Target durante os 4 meses que estive nos EUA", x = "mês/ano", y = "USD gastos", caption= "dólar = 5,26") + theme_void() +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Inclina o texto do eixo X para melhor visualização
# 
# mercado$Total_em_reais <- as.numeric(gsub(",", ".", mercado$total_em_reais))
# total_per_market <- aggregate(total_em_reais ~ mercado, mercado, mean)
# ggplot(total_per_market, aes(x = mercado, y = total_em_reais, fill = mercado)) +
#   geom_bar(stat = "identity") +
#   labs(title = "Quanto gastei por mercado", x = "Mercado", y = "Total em BRL", subtitle = "Apesar de mais distante, HEB foi o meu queridinho para compras; \nFiesta, o com opções mais 'latinas', não me agradou tanto") + theme_classic()

```

------------------------------------------------------------------------

## One more weekend in this city...

Austin é uma cidade BEM musical. É a terra do Austin City Limits, programa de TV comandado pelo Willie Nelson

O ACL deu origem ao ACL Festival, festival de música que ocorre anualmente no Zilker Park. E eu pude assistir quatro de seis dias do festival :D Nos três primeiros, fui como voluntária do Austin Parks Foundation, uma organização que ajuda na preservação de parques e áreas verdes da cidade.

![](images/acl.png){fig-align="center"}

Apesar da minha presença no ACL Fest, tive pouquíssimo contato com a cena local de música. Falha minha. Mas acho que a música me deixava mais próxima de casa e do hábito que não pude "viver plenamente" lá no Texas, o de ir em showzinhos toda semana. Faz sentido na minha cabeça essa necessidade de me manter na zona de conforto, pelo menos musicalmente.

Para acessar os dados musicais sobre o que ouvi no tempo que fiquei nos EUA, baixei os scrobbles do meu Last.fm, exportei como um arquivo csv e importei no RStudio no objeto `lastfm.` Com o tidyverse, filtrei o período de interesse.

```{r}
#| message: false
#| warning: false
#Carregando os dados
## Scrobbles no Last.fm
# lastfm <- read_csv("data-raw/lastfm.csv", 
#                    col_types = cols(date = col_date(format = "%d/%m/%Y"), ))
# 
# #selecionando as colunas de interesse e filtrando o período que eu vou analisar
# lastfm_clean <- lastfm |> 
#   select(date, Artist, album, track) |>  
#   filter(date > "2022-09-06" & date < "2023-01-01")
# lastfm_clean |> DT::datatable()
```

### Os artistas que mais ouvi nos meus quatro meses nos EUA

```{r}
#| message: false
#| warning: false

# lastfm_clean |> 
#   group_by(Artist, track) |> 
#   summarise(ocor = n()) |> 
#   arrange(desc(ocor)) |> 
#   DT::datatable(options = list(pageLength = 5, scrollX=T))
```

Curiosamente, a música que mais ouvi nos meus dias texanos leva o nome de CUBA🇨🇺, cantada por um artista do BRASIL🇧🇷. Nem pra ser um country, rs

Mas quando analiso os artistas que mais escutei (soma de reproduções de todas as faixas de cada artista), aí aparece a influência do meu período no texas, com as descobertas que fiz no ACL Fest. No topo do ranking está Japanese Breakfast, banda estadunidense liderada pela Michelle Zauner (sim, a autora de "Aos Prantos no Mercado").

```{r}
#| message: false
#| warning: false
# lastfm_clean |> 
#   group_by(Artist) |> 
#   summarise(ocor = n()) |> 
#   arrange(desc(ocor)) |> 
#   DT::datatable()
# 
# 
# g <- lastfm_clean |> 
#   group_by(Artist) |> 
#   summarise(ocor = n()) |> 
#   arrange(desc(ocor))
# 
# ggplot(head(g,20), aes(reorder(Artist,ocor), ocor)) +
#   geom_bar(stat = "identity", fill = "#CC5500") + coord_flip() +
#   labs(
#     x = "",
#     title = "Artistas que mais ouvi no Texas",
#     subtitle = "ACL Fest e minha saudade de casa explicam o top 20",
#     caption = "por Bianca Muniz (@biancamuniz__) | Fonte: last.fm"
#   )+
#   theme_minimal()+
#   theme(
#     plot.background = element_rect(fill = "white", colour = "white"),
#     panel.background = element_rect(fill = "white", colour = "white"),
#     plot.title=element_text(hjust = 0.5, size = 20, color = "#000000", face="bold"),
#     plot.title.position = "plot",
#     plot.caption = element_text(size=10),
#     plot.subtitle=element_text(face="italic", hjust = 0.5, size=16),
#     axis.text.y = element_text(size = 10, face="bold"),
#     axis.text.x = element_blank(), # Remove os valores do eixo x
#     axis.ticks.x = element_blank(), # Remove as marcações do eixo x
#     axis.title.x = element_blank(), # Remove o título do eixo x
#     panel.grid.major = element_blank(),
#     panel.grid.minor = element_blank(),
#     panel.border = element_blank(),
#     axis.line = element_blank()
#   ) +
#   geom_text(aes(label=ocor), hjust=-0.1, size=4)
```

Outros nomes que vi ao vivo no festival aparecem no "top 20", como Paramore (3ª posição), Maude Latour (4ª), BENEE (15ª), SZA (18ª) e Lil Nas X (19ª).

```{r}
#p <- cityview(name = "Austin", zoom = 1, theme = "comic", border = "circle")
#p
```
